# To be used with poetry locally
#
# Requires:
#  - poetry
#  - python@3.6.0

version: "2.3"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.1.1
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: single-node
    networks:
      - default
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:9200/_cluster/health?wait_for_status=green"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.1.1
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - 5601:5601
    networks:
      - default

  redis:
    image: redis:5.0.6
    ports:
      - 6379:6379
    networks:
      - default

  postgres:
    image: centos/postgresql-95-centos7
    volumes:
      - pgsql-data:/var/lib/pgsql/data
    networks:
      - default
    ports:
      - 5432:5432
    env_file:
      - .pipenv.env

  rabbitmq:
    image: rabbitmq:3.8.2-management
    env_file:
      - .pipenv.env
    restart: "always"
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - default
    healthcheck:
      test: ["CMD", "rabbitmqctl", "node_health_check"]
      interval: 60s
      timeout: 10s
      retries: 3

  tika:
    image: apache/tika:1.24
    ports:
      - "9998:9998"
    networks:
      - default

networks:
  default:

volumes:
  es-data:
  pgsql-data:
